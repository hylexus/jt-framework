import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as r,c,b as e,d as n,e as t,a}from"./app-BEQS3wW-.js";const i={},d=a(`<h1 id="server" tabindex="-1"><a class="header-anchor" href="#server"><span>server</span></a></h1><div class="hint-container info"><p class="hint-container-title">提示</p><p>该章节介绍的是 <code>jt808.server.xxx</code> 相关的配置。</p></div><h2 id="配置项总览" tabindex="-1"><a class="header-anchor" href="#配置项总览"><span>配置项总览</span></a></h2><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt808</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6808</span>
    <span class="token key atrule">boss-thread-count</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token key atrule">worker-thread-count</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token comment"># 优先使用 Epoll(v2.3.0-rc.5)</span>
    <span class="token key atrule">prefer-epoll</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">idle-state-handler</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">reader-idle-time</span><span class="token punctuation">:</span> 20m
      <span class="token key atrule">writer-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
      <span class="token key atrule">all-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u={id:"enabled",tabindex:"-1"},k={class:"header-anchor",href:"#enabled"},m=a(`<ul><li>类型：<code>boolean</code></li><li>默认值：<code>true</code></li></ul><p>指令服务器是否开启。</p><h2 id="port" tabindex="-1"><a class="header-anchor" href="#port"><span>port</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>6808</code></li></ul><p><code>Netty</code> 服务器的TCP端口。</p><h2 id="boss-thread-count" tabindex="-1"><a class="header-anchor" href="#boss-thread-count"><span>boss-thread-count</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>0</code></li></ul><p>默认值 <code>0</code> 表示交由 <code>Netty</code> 处理。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>bossGroup<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>bossThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="worker-thread-count" tabindex="-1"><a class="header-anchor" href="#worker-thread-count"><span>worker-thread-count</span></a></h2><ul><li>类型：<code>int</code></li><li>默认值：<code>0</code></li></ul><p>默认值 <code>0</code> 表示交由 <code>Netty</code> 处理。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">this</span><span class="token punctuation">.</span>workerGroup<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>workThreadCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="prefer-epoll" tabindex="-1"><a class="header-anchor" href="#prefer-epoll"><span>prefer-epoll</span></a></h2><p>从 <strong>v2.3.0-rc.5</strong> 开始，在 <strong>Linux</strong> 环境下，优先使用 <code>Epoll</code>。</p><h2 id="idle-state-handler" tabindex="-1"><a class="header-anchor" href="#idle-state-handler"><span>idle-state-handler</span></a></h2><p>该配置项对应 <code>io.netty.handler.timeout.IdleStateHandler</code> 的 三个属性：<code>readerIdleTime</code>、 <code>writerIdleTime</code> 、<code>allIdelTime</code>。</p><p>如果你的项目不需要 <code>IdleStateHandler</code> 的话，将 <code>jt808.server.idle-state-handler.enabled</code> 配置为 <code>false</code> 即可。</p>`,18),h={class:"hint-container caution"},v=e("p",{class:"hint-container-title"},"警告",-1),b=e("li",null,[n("在 2.0.3(不包括) 以下的版本中这三个配置项的默认值都是 "),e("code",null,"20m")],-1),y=e("code",null,"Jt808TerminalHeatBeatHandler",-1),g=e("code",null,"Bug",-1),x={href:"https://github.com/hylexus/jt-framework/issues/66",target:"_blank",rel:"noopener noreferrer"},_=a(`<p><strong>2.0.3</strong> 之后版本默认配置如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt808</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">idle-state-handler</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">reader-idle-time</span><span class="token punctuation">:</span> 20m <span class="token comment"># 20m内没有发送数据的客户端将被断开</span>
      <span class="token key atrule">writer-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
      <span class="token key atrule">all-idle-time</span><span class="token punctuation">:</span> 0s <span class="token comment"># disabled</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function f(j,w){const l=s("Badge"),o=s("ExternalLinkIcon");return r(),c("div",null,[d,e("h2",u,[e("a",k,[e("span",null,[n("enabled "),t(l,{text:"v2.3.0-rc.6",type:"tip",vertical:"middle"})])])]),m,e("div",h,[v,e("ul",null,[b,e("li",null,[n("同时其实现类 "),y,n(" 有 "),g,n("，详情见: "),e("a",x,[n("issues#66"),t(o)])])])]),_])}const C=p(i,[["render",f],["__file","server.html.vue"]]),E=JSON.parse('{"path":"/v2/jt-808/config/server.html","title":"server","lang":"zh-CN","frontmatter":{"icon":"object","description":"server 提示 该章节介绍的是 jt808.server.xxx 相关的配置。 配置项总览 enabled 类型：boolean 默认值：true 指令服务器是否开启。 port 类型：int 默认值：6808 Netty 服务器的TCP端口。 boss-thread-count 类型：int 默认值：0 默认值 0 表示交由 Netty 处理。 ...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v2/jt-808/config/server.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"server"}],["meta",{"property":"og:description","content":"server 提示 该章节介绍的是 jt808.server.xxx 相关的配置。 配置项总览 enabled 类型：boolean 默认值：true 指令服务器是否开启。 port 类型：int 默认值：6808 Netty 服务器的TCP端口。 boss-thread-count 类型：int 默认值：0 默认值 0 表示交由 Netty 处理。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-20T09:48:36.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2025-04-20T09:48:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"server\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-20T09:48:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"配置项总览","slug":"配置项总览","link":"#配置项总览","children":[]},{"level":2,"title":"enabled","slug":"enabled","link":"#enabled","children":[]},{"level":2,"title":"port","slug":"port","link":"#port","children":[]},{"level":2,"title":"boss-thread-count","slug":"boss-thread-count","link":"#boss-thread-count","children":[]},{"level":2,"title":"worker-thread-count","slug":"worker-thread-count","link":"#worker-thread-count","children":[]},{"level":2,"title":"prefer-epoll","slug":"prefer-epoll","link":"#prefer-epoll","children":[]},{"level":2,"title":"idle-state-handler","slug":"idle-state-handler","link":"#idle-state-handler","children":[]}],"git":{"createdTime":1683899054000,"updatedTime":1745142516000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":3}]},"readingTime":{"minutes":1.03,"words":310},"filePathRelative":"v2/jt-808/config/server.md","localizedDate":"2023年5月12日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>该章节介绍的是 <code>jt808.server.xxx</code> 相关的配置。</p>\\n</div>\\n<h2>配置项总览</h2>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code><span class=\\"token key atrule\\">jt808</span><span class=\\"token punctuation\\">:</span>\\n  <span class=\\"token key atrule\\">server</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token key atrule\\">enabled</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n    <span class=\\"token key atrule\\">port</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">6808</span>\\n    <span class=\\"token key atrule\\">boss-thread-count</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token key atrule\\">worker-thread-count</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token comment\\"># 优先使用 Epoll(v2.3.0-rc.5)</span>\\n    <span class=\\"token key atrule\\">prefer-epoll</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n    <span class=\\"token key atrule\\">idle-state-handler</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token key atrule\\">enabled</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n      <span class=\\"token key atrule\\">reader-idle-time</span><span class=\\"token punctuation\\">:</span> 20m\\n      <span class=\\"token key atrule\\">writer-idle-time</span><span class=\\"token punctuation\\">:</span> 0s <span class=\\"token comment\\"># disabled</span>\\n      <span class=\\"token key atrule\\">all-idle-time</span><span class=\\"token punctuation\\">:</span> 0s <span class=\\"token comment\\"># disabled</span>\\n</code></pre></div>"}');export{C as comp,E as data};
