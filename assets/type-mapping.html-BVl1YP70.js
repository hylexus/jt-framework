import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as d,c as p,b as e,e as o,w as a,a as n,d as i}from"./app-BEQS3wW-.js";const s={},l=n('<h1 id="类型映射" tabindex="-1"><a class="header-anchor" href="#类型映射"><span>类型映射</span></a></h1><p>这里要介绍的是 <strong>JT/T 808</strong> 协议中定义的 <code>BYTE</code>、<code>WORD</code>、<code>DWORD</code>、<code>BCD</code>、<code>STRING</code>、<code>BYTES</code> 和 <code>java</code> 数据类型的映射关系。</p><p>参考下面两个章节：</p>',3),m=n('<div class="hint-container tip"><p class="hint-container-title">内置消息说明</p><ul><li><code>io.github.hylexus.jt.jt808.spec.builtin.msg.req</code> 包下内置了一些 <strong>请求消息</strong> 实体类映射示例</li><li><code>io.github.hylexus.jt.jt808.spec.builtin.msg.resp</code> 包下内置了一些 <strong>响应消息</strong> 实体类映射示例</li></ul><p>这些类命名格式都是 <code>BuiltinMsgXxx</code> 或 <code>BuiltinMsgXxxAlias</code>, 以 <code>Alias</code> 结尾的示例是 <strong>v2.1.1</strong> 开始加入的。</p><p>这些类只是个示例，很可能不符合你的需求，你应该复制一份出来修改(不同版本可能有改动)。</p></div>',1);function u(h,g){const t=r("RouteLink");return d(),p("div",null,[l,e("ul",null,[e("li",null,[o(t,{to:"/v2/jt-808/guide/annotation-based-dev/data-type-mapping.html"},{default:a(()=>[i("数据类型转换")]),_:1})]),e("li",null,[o(t,{to:"/v2/jt-808/guide/annotation-based-dev/data-type-mapping-via-alias.html"},{default:a(()=>[i("数据类型转换(注解别名)")]),_:1})])]),m])}const _=c(s,[["render",u],["__file","type-mapping.html.vue"]]),j=JSON.parse('{"path":"/protocol-introduction/808/type-mapping.html","title":"类型映射","lang":"zh-CN","frontmatter":{"description":"类型映射 这里要介绍的是 JT/T 808 协议中定义的 BYTE、WORD、DWORD、BCD、STRING、BYTES 和 java 数据类型的映射关系。 参考下面两个章节： 内置消息说明 io.github.hylexus.jt.jt808.spec.builtin.msg.req 包下内置了一些 请求消息 实体类映射示例 io.github.h...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/protocol-introduction/808/type-mapping.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"类型映射"}],["meta",{"property":"og:description","content":"类型映射 这里要介绍的是 JT/T 808 协议中定义的 BYTE、WORD、DWORD、BCD、STRING、BYTES 和 java 数据类型的映射关系。 参考下面两个章节： 内置消息说明 io.github.hylexus.jt.jt808.spec.builtin.msg.req 包下内置了一些 请求消息 实体类映射示例 io.github.h..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T12:16:59.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-05-08T12:16:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型映射\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-08T12:16:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[],"git":{"createdTime":1683388193000,"updatedTime":1683548219000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":2}]},"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"protocol-introduction/808/type-mapping.md","localizedDate":"2023年5月6日","autoDesc":true,"excerpt":"\\n<p>这里要介绍的是 <strong>JT/T 808</strong> 协议中定义的 <code>BYTE</code>、<code>WORD</code>、<code>DWORD</code>、<code>BCD</code>、<code>STRING</code>、<code>BYTES</code> 和 <code>java</code> 数据类型的映射关系。</p>\\n<p>参考下面两个章节：</p>\\n<ul>\\n<li><a href=\\"/jt-framework/v2/jt-808/guide/annotation-based-dev/data-type-mapping.html\\" target=\\"_blank\\">数据类型转换</a></li>\\n<li><a href=\\"/jt-framework/v2/jt-808/guide/annotation-based-dev/data-type-mapping-via-alias.html\\" target=\\"_blank\\">数据类型转换(注解别名)</a></li>\\n</ul>"}');export{_ as comp,j as data};
