import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as l,c as i,b as n,d as s,e,a}from"./app-BEQS3wW-.js";const u={},d=n("h1",{id:"注解别名-v2-1-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#注解别名-v2-1-1"},[n("span",null,"注解别名(v2.1.1)")])],-1),r={class:"hint-container tip"},k=n("p",{class:"hint-container-title"},"提示",-1),v=a(`<h2 id="为什么要引入别名机制" tabindex="-1"><a class="header-anchor" href="#为什么要引入别名机制"><span>为什么要引入别名机制?</span></a></h2><p>一句话概括就是: 简化代码，同时又能方便地扩展自定义注解。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>为 <code>@RequestField</code> 注解提供了别名 <code>@RequestFieldAlias</code></li><li>为 <code>@ResponseField</code> 注解提供了别名 <code>@ResponseFieldAlias</code></li><li>相当于 <strong>Spring</strong> 中 <code>@RequestMapping</code> 和 <code>@GetMapping</code> 的关系</li></ul></div><p>以 <strong>位置上报</strong> 报文为例，解析经纬度的实体类可能是下面这种写法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Jt808RequestBody</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BuiltinMsg0200V2019</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// (3). byte[8,12) DWORD 纬度</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> startIndex <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token constant">DWORD</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> lat<span class="token punctuation">;</span>

    <span class="token comment">// (4). byte[12,16) DWORD 经度</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> startIndex <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token constant">DWORD</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> lng<span class="token punctuation">;</span>

    <span class="token comment">// (8). byte[22,28) BCD[6] 时间</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> startIndex <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token constant">BCD</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> time<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可能会对于上面的代码片段有几个疑问：</p>`,6),m=n("code",null,"order",-1),b=n("li",null,"这个问题暂且不讨论(暂且就认为是必须的吧)",-1),g={href:"https://stackoverflow.com/questions/5001172/java-reflection-getting-fields-and-methods-in-declaration-order",target:"_blank",rel:"noopener noreferrer"},y=a("<li><code>startIndex</code> 是必须要指定的吗？ <ul><li>其实这个属性是从 <strong>1.x</strong> 继承过来的</li><li><strong>1.x</strong> 的版本是必须的，因为 <strong>1.x</strong> 是通过 <code>byte[]</code> 来解析报文的，没有维护 <code>readerIndex</code></li><li><strong>2.x</strong> 的版本通过 <code>Netty</code> 的 <code>ByteBuf</code> 来解析的。虽然有这个 <code>startIndex</code> 属性，但是 <code>Jt808FieldDeserializer</code> 的实现类中几乎没用到这个属性。也就是说 <strong>2.x</strong><br> 中可以不用指定这个属性了(实现类依赖于 <code>Netty</code> 的 <code>ByteBuf</code> 的 <code>readerIndex</code>)。</li></ul></li><li><code>dataType</code> 是必须要指定的吗？ <ul><li><code>dataType</code> 和 <code>length</code> 两个属性其实在一定角度来看可以看成一回事。</li><li><code>dataType= DWOD</code> 也就是间接指定了 <code>length = 4</code></li><li><code>dataType = BYTE</code> 也就是间接指定了 <code>length = 1</code></li><li>但是 <code>dataType = STRING</code> 时, 就需要指定 <code>length</code> 了。</li><li>所以 <code>@RequestField</code> 注解中包含了这么多属性。</li><li>但是在使用时难免会疑惑: 到底该哪些属性是必须的???</li></ul></li><li><code>length</code> 是必须要指定的吗？(和上一个问题类似)</li>",3),F=a(`<p>鉴于以上几个问题，<strong>2.1.1</strong> 开始引入了注解别名机制。</p><p>说白了就是:</p><ul><li>为 <code>@RequestField</code> 注解提供了快捷方式 <code>@RequestFieldAlias</code></li><li>为 <code>@ResponseField</code> 注解提供了快捷方式 <code>@ResponseFieldAlias</code></li></ul><p>下面是使用注解别名实现的同样效果的实体类映射(暂且先忽略 <code>order</code> 属性)：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Jt808RequestBody</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BuiltinMsg0200V2019Alias</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// (3). byte[8,12) DWORD 纬度</span>
    <span class="token annotation punctuation">@RequestFieldAlias.Dword</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> lat<span class="token punctuation">;</span>

    <span class="token comment">// (4). byte[12,16) DWORD 经度</span>
    <span class="token annotation punctuation">@RequestFieldAlias.Dword</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> lng<span class="token punctuation">;</span>

    <span class="token comment">// (8). byte[22,28) BCD[6] 时间</span>
    <span class="token annotation punctuation">@RequestFieldAlias.Bcd</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> length <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> time<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>省去了 <code>startIndex</code> 和 部分 <code>length</code> 属性。<br> 上面代码中的 <code>@RequestFieldAlias</code> 相比于 <code>@RequestField</code> 是不是简介多了？</p><h2 id="requestfieldalias" tabindex="-1"><a class="header-anchor" href="#requestfieldalias"><span>@RequestFieldAlias</span></a></h2><p><code>RequestFieldAlias</code> 是给 <code>@RequestField</code> 提供的别名(快捷方式)。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">RequestFieldAlias</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Documented</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token class-name">MsgDataType</span><span class="token punctuation">.</span><span class="token constant">WORD</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@interface</span> <span class="token class-name">Word</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Documented</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token class-name">MsgDataType</span><span class="token punctuation">.</span><span class="token constant">DWORD</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@interface</span> <span class="token class-name">Dword</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Documented</span>
    <span class="token annotation punctuation">@RequestField</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token class-name">MsgDataType</span><span class="token punctuation">.</span><span class="token constant">BCD</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@interface</span> <span class="token class-name">Bcd</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;length&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;lengthExpression&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">lengthExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;lengthMethod&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">lengthMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">RequestField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="responsefieldalias" tabindex="-1"><a class="header-anchor" href="#responsefieldalias"><span>@ResponseFieldAlias</span></a></h2><p><code>@ResponseFieldAlias</code> 是给 <code>@ResponseField</code> 提供的别名(快捷方式)。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ResponseFieldAlias</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Documented</span>
    <span class="token annotation punctuation">@ResponseField</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token class-name">MsgDataType</span><span class="token punctuation">.</span><span class="token constant">WORD</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@interface</span> <span class="token class-name">Word</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;conditionalOn&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">conditionalOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;customerFieldSerializerClass&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808FieldSerializer</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">customerFieldSerializerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">Jt808FieldSerializer<span class="token punctuation">.</span>PlaceholderFiledSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Documented</span>
    <span class="token annotation punctuation">@ResponseField</span><span class="token punctuation">(</span>dataType <span class="token operator">=</span> <span class="token class-name">MsgDataType</span><span class="token punctuation">.</span><span class="token constant">DWORD</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@interface</span> <span class="token class-name">Dword</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">int</span> <span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;conditionalOn&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">conditionalOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;customerFieldSerializerClass&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808FieldSerializer</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">customerFieldSerializerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">Jt808FieldSerializer<span class="token punctuation">.</span>PlaceholderFiledSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>annotation <span class="token operator">=</span> <span class="token class-name">ResponseField</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> attribute <span class="token operator">=</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h2><h3 id="兼容性" tabindex="-1"><a class="header-anchor" href="#兼容性"><span>兼容性</span></a></h3><p><strong>Question</strong>: 注解别名和原来的 <code>@RequestField</code>、 <code>@ResponseField</code> 兼容吗？</p><p><strong>Answer</strong>: 兼容</p><ul><li>注解别名就是对 <code>@RequestField</code>、 <code>@ResponseField</code> 的 <code>{简化,扩展}</code></li><li>底层的 <code>Jt808FieldDeserializer</code> 和 <code>Jt808FieldSerializer</code> 读取的依然是 <code>@RequestField</code> 和 <code>@ResponseField</code></li><li>实际上是借助于 <strong>Spring</strong> 提供的 <code>@AliasFor</code> 的强大功能实现的</li></ul><h3 id="混合使用" tabindex="-1"><a class="header-anchor" href="#混合使用"><span>混合使用</span></a></h3><p><strong>Question</strong>: 混合使用问题？</p><ol><li><code>@RequestFieldAlias</code> 和 <code>@RequestField</code> 能混合使用吗？</li><li><code>@ResponseFieldAlias</code> 是给 <code>@ResponseField</code> 能混合使用吗？</li></ol><p><strong>Answer</strong>: 可以混合使用</p><p>本质上和上一个问题是同一个问题。</p><p>底层的 <code>Jt808FieldDeserializer</code> 和 <code>Jt808FieldSerializer</code> 读取的依然是 <code>@RequestField</code> 和 <code>@ResponseField</code>。</p><p>别名(<code>Alias</code>)只是个快捷方式或者扩展。</p>`,24);function h(q,R){const o=t("Badge"),p=t("ExternalLinkIcon");return l(),i("div",null,[d,n("div",r,[k,n("p",null,[s("注解别名是 "),e(o,{text:"2.1.1",type:"tip",vertical:"middle"}),s(" 中开始引入的。")])]),v,n("ol",null,[n("li",null,[m,s(" 是必须要指定的吗？ "),n("ul",null,[b,n("li",null,[n("a",g,[s("参考Stackoverflow"),e(p)])])])]),y]),F])}const A=c(u,[["render",h],["__file","annotation-alias.html.vue"]]),D=JSON.parse('{"path":"/v2/jt-808/guide/annotation-based-dev/annotation-alias.html","title":"注解别名(v2.1.1)","lang":"zh-CN","frontmatter":{"icon":"at","description":"注解别名(v2.1.1) 提示 注解别名是 为什么要引入别名机制? 一句话概括就是: 简化代码，同时又能方便地扩展自定义注解。 提示 为 @RequestField 注解提供了别名 @RequestFieldAlias 为 @ResponseField 注解提供了别名 @ResponseFieldAlias 相当于 Spring 中 @RequestM...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v2/jt-808/guide/annotation-based-dev/annotation-alias.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"注解别名(v2.1.1)"}],["meta",{"property":"og:description","content":"注解别名(v2.1.1) 提示 注解别名是 为什么要引入别名机制? 一句话概括就是: 简化代码，同时又能方便地扩展自定义注解。 提示 为 @RequestField 注解提供了别名 @RequestFieldAlias 为 @ResponseField 注解提供了别名 @ResponseFieldAlias 相当于 Spring 中 @RequestM..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-14T08:27:03.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-05-14T08:27:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解别名(v2.1.1)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-14T08:27:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"为什么要引入别名机制?","slug":"为什么要引入别名机制","link":"#为什么要引入别名机制","children":[]},{"level":2,"title":"@RequestFieldAlias","slug":"requestfieldalias","link":"#requestfieldalias","children":[]},{"level":2,"title":"@ResponseFieldAlias","slug":"responsefieldalias","link":"#responsefieldalias","children":[]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[{"level":3,"title":"兼容性","slug":"兼容性","link":"#兼容性","children":[]},{"level":3,"title":"混合使用","slug":"混合使用","link":"#混合使用","children":[]}]}],"git":{"createdTime":1683388193000,"updatedTime":1684052823000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":2}]},"readingTime":{"minutes":3.55,"words":1066},"filePathRelative":"v2/jt-808/guide/annotation-based-dev/annotation-alias.md","localizedDate":"2023年5月6日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>注解别名是 </p>\\n</div>\\n<h2>为什么要引入别名机制?</h2>\\n<p>一句话概括就是: 简化代码，同时又能方便地扩展自定义注解。</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<ul>\\n<li>为 <code>@RequestField</code> 注解提供了别名 <code>@RequestFieldAlias</code></li>\\n<li>为 <code>@ResponseField</code> 注解提供了别名 <code>@ResponseFieldAlias</code></li>\\n<li>相当于 <strong>Spring</strong> 中 <code>@RequestMapping</code> 和 <code>@GetMapping</code> 的关系</li>\\n</ul>\\n</div>"}');export{A as comp,D as data};
