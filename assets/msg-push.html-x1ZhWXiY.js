import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c,b as n,d as s,e as t,a as i}from"./app-BEQS3wW-.js";const l={},u=n("h1",{id:"消息下发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#消息下发"},[n("span",null,"消息下发")])],-1),r={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"传送门",-1),k={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-annotation",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>本小节将介绍如何主动下发消息给终端。</p></div><h2 id="_1-手动下发" tabindex="-1"><a class="header-anchor" href="#_1-手动下发"><span>1. 手动下发</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeController</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">Jt808SessionManager</span> sessionManager<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendDataToClient</span><span class="token punctuation">(</span><span class="token class-name">String</span> terminalId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 通过终端id获取Session</span>
        <span class="token keyword">final</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Jt808Session</span><span class="token punctuation">&gt;</span></span> sessionInfo <span class="token operator">=</span> sessionManager<span class="token punctuation">.</span><span class="token function">findByTerminalId</span><span class="token punctuation">(</span>terminalId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sessionInfo<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">JtSessionNotFoundException</span><span class="token punctuation">(</span><span class="token string">&quot;session not found with terminalId &quot;</span> <span class="token operator">+</span> terminalId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 通过Session发送数据</span>
            sessionInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendMsgToClient</span><span class="token punctuation">(</span><span class="token class-name">Unpooled</span><span class="token punctuation">.</span><span class="token function">copiedBuffer</span><span class="token punctuation">(</span><span class="token string">&quot;data will be sent to client&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">警告</p><ul><li>手动发送的数据，需要手动拼装为符合808协议格式的报文，并手动转义。</li><li>所以内置了一个CommandSender来自动转换为符合808协议格式的报文并发送给客户端。</li></ul></div><h2 id="_2-使用commandsender下发" tabindex="-1"><a class="header-anchor" href="#_2-使用commandsender下发"><span>2. 使用CommandSender下发</span></a></h2><h3 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h3><p>TODO 这里缺一个图，暂时没时间画了…………</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/demo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SampleController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CommandSender</span> commandSender<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/send-msg&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;terminalId&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;13717861955&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> terminalId<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;timeout&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> timeout<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">RespTerminalSettings</span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RespTerminalSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RespTerminalSettings<span class="token punctuation">.</span>ParamItem</span><span class="token punctuation">&gt;</span></span> paramList <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">RespTerminalSettings<span class="token punctuation">.</span>ParamItem</span><span class="token punctuation">(</span><span class="token number">0x0029</span><span class="token punctuation">,</span> <span class="token class-name">DwordBytesValueWrapper</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        param<span class="token punctuation">.</span><span class="token function">setParamList</span><span class="token punctuation">(</span>paramList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        param<span class="token punctuation">.</span><span class="token function">setTotalParamCount</span><span class="token punctuation">(</span>paramList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 【下发消息】的消息类型为: RESP_TERMINAL_PARAM_SETTINGS (0x8103)  --&gt; RespTerminalSettings的类注解上指定了下发类型</span>
        <span class="token comment">// 客户端对该【下发消息】的回复消息类型为: CLIENT_COMMON_REPLY (0x0001)</span>
        <span class="token class-name">CommandMsg</span> commandMsg <span class="token operator">=</span> <span class="token class-name">CommandMsg</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>terminalId<span class="token punctuation">,</span> <span class="token constant">CLIENT_COMMON_REPLY</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Object</span> resp <span class="token operator">=</span> commandSender<span class="token punctuation">.</span><span class="token function">sendCommandAndWaitingForReply</span><span class="token punctuation">(</span>commandMsg<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;resp: {}&quot;</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Jt808RespMsgBody</span><span class="token punctuation">(</span>respMsgId <span class="token operator">=</span> <span class="token number">0x8103</span><span class="token punctuation">,</span> desc <span class="token operator">=</span> <span class="token string">&quot;设置终端参数&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RespTerminalSettings</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ParamItem</span><span class="token punctuation">&gt;</span></span> paramList<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> <span class="token constant">BYTE</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> totalParamCount<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ParamItem</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> <span class="token constant">DWORD</span><span class="token punctuation">)</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> msgId<span class="token punctuation">;</span>

        <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> targetMsgDataType <span class="token operator">=</span> <span class="token constant">BYTE</span><span class="token punctuation">)</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> bytesCountOfContentLength<span class="token punctuation">;</span>

        <span class="token annotation punctuation">@CommandField</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">private</span> <span class="token class-name">BytesValueWrapper</span> msgContent<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">ParamItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> msgId<span class="token punctuation">,</span> <span class="token class-name">BytesValueWrapper</span> msgContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>msgId <span class="token operator">=</span> msgId<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>msgContent <span class="token operator">=</span> msgContent<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>bytesCountOfContentLength <span class="token operator">=</span> msgContent<span class="token punctuation">.</span><span class="token function">getAsBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),v={class:"hint-container tip"},b=n("p",{class:"hint-container-title"},"传送门",-1),g={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-annotation",target:"_blank",rel:"noopener noreferrer"};function h(y,f){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("div",r,[d,n("p",null,[s("本小节的示例可以在 "),n("a",k,[s("samples/jt-808-server-sample-annotation"),t(a)]),s(" 下找到对应代码。")])]),m,n("div",v,[b,n("p",null,[s("本小节的示例可以在 "),n("a",g,[s("samples/jt-808-server-sample-annotation"),t(a)]),s(" 下找到对应代码。")])])])}const C=e(l,[["render",h],["__file","msg-push.html.vue"]]),j=JSON.parse('{"path":"/v1/jt-808/guide/annotation-based-dev/msg-push.html","title":"消息下发","lang":"zh-CN","frontmatter":{"headerDepth":3,"description":"消息下发 传送门 本小节的示例可以在 samples/jt-808-server-sample-annotation 下找到对应代码。 提示 本小节将介绍如何主动下发消息给终端。 1. 手动下发 警告 手动发送的数据，需要手动拼装为符合808协议格式的报文，并手动转义。 所以内置了一个CommandSender来自动转换为符合808协议格式的报文并发送...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v1/jt-808/guide/annotation-based-dev/msg-push.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"消息下发"}],["meta",{"property":"og:description","content":"消息下发 传送门 本小节的示例可以在 samples/jt-808-server-sample-annotation 下找到对应代码。 提示 本小节将介绍如何主动下发消息给终端。 1. 手动下发 警告 手动发送的数据，需要手动拼装为符合808协议格式的报文，并手动转义。 所以内置了一个CommandSender来自动转换为符合808协议格式的报文并发送..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-03T08:03:24.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-07-03T08:03:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消息下发\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-03T08:03:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"1. 手动下发","slug":"_1-手动下发","link":"#_1-手动下发","children":[]},{"level":2,"title":"2. 使用CommandSender下发","slug":"_2-使用commandsender下发","link":"#_2-使用commandsender下发","children":[{"level":3,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]}],"git":{"createdTime":1671812085000,"updatedTime":1688371404000,"contributors":[{"name":"eric","email":"dferic@foxmail.com","commits":1},{"name":"hylexus","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":1.47,"words":440},"filePathRelative":"v1/jt-808/guide/annotation-based-dev/msg-push.md","localizedDate":"2022年12月24日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">传送门</p>\\n<p>本小节的示例可以在 <a href=\\"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-annotation\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">samples/jt-808-server-sample-annotation</a> 下找到对应代码。</p>\\n</div>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>本小节将介绍如何主动下发消息给终端。</p>\\n</div>"}');export{C as comp,j as data};
