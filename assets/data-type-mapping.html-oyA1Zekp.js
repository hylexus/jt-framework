import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as d,c as e,a as o}from"./app-BEQS3wW-.js";const r={},a=o('<h1 id="数据类型转换-传统方式" tabindex="-1"><a class="header-anchor" href="#数据类型转换-传统方式"><span>数据类型转换(传统方式)</span></a></h1><h2 id="byte" tabindex="-1"><a class="header-anchor" href="#byte"><span>BYTE</span></a></h2><h3 id="反序列化byte" tabindex="-1"><a class="header-anchor" href="#反序列化byte"><span>反序列化BYTE</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte, Byte</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td>有溢出的风险</td></tr><tr><td><code>short, Short</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化byte" tabindex="-1"><a class="header-anchor" href="#序列化byte"><span>序列化BYTE</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte, Byte</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>short, Short</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = BYTE)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="bytes" tabindex="-1"><a class="header-anchor" href="#bytes"><span>BYTES</span></a></h2><h3 id="反序列化bytes" tabindex="-1"><a class="header-anchor" href="#反序列化bytes"><span>反序列化BYTES</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte[], Byte[]</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>ByteBuf</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>String</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BYTES, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化bytes" tabindex="-1"><a class="header-anchor" href="#序列化bytes"><span>序列化BYTES</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>byte[], Byte[]</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>ByteBuf</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>String</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BYTES)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="word" tabindex="-1"><a class="header-anchor" href="#word"><span>WORD</span></a></h2><h3 id="反序列化word" tabindex="-1"><a class="header-anchor" href="#反序列化word"><span>反序列化WORD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>short, Short</code></td><td><code>@RequestField(dataType = WORD)</code></td><td>有溢出的风险</td></tr><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = WORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化word" tabindex="-1"><a class="header-anchor" href="#序列化word"><span>序列化WORD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>short, Short</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = WORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="dword" tabindex="-1"><a class="header-anchor" href="#dword"><span>DWORD</span></a></h2><h3 id="反序列化dword" tabindex="-1"><a class="header-anchor" href="#反序列化dword"><span>反序列化DWORD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>int, Integer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td>有溢出的风险</td></tr><tr><td><code>long, Long</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@RequestField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化dword" tabindex="-1"><a class="header-anchor" href="#序列化dword"><span>序列化DWORD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>int, Integer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>long, Long</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>BitOperator</code></td><td><code>@ResponseField(dataType = DWORD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="bcd" tabindex="-1"><a class="header-anchor" href="#bcd"><span>BCD</span></a></h2><h3 id="反序列化bcd" tabindex="-1"><a class="header-anchor" href="#反序列化bcd"><span>反序列化BCD</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = BCD, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列号bcd" tabindex="-1"><a class="header-anchor" href="#序列号bcd"><span>序列号BCD</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = BCD)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h2 id="string" tabindex="-1"><a class="header-anchor" href="#string"><span>STRING</span></a></h2><h3 id="反序列化string" tabindex="-1"><a class="header-anchor" href="#反序列化string"><span>反序列化STRING</span></a></h3><table><thead><tr><th>目标类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@RequestField(dataType = STRING, length = xxx)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table><h3 id="序列化string" tabindex="-1"><a class="header-anchor" href="#序列化string"><span>序列化STRING</span></a></h3><table><thead><tr><th>源类型</th><th>注解</th><th>备注</th></tr></thead><tbody><tr><td><code>String</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td></td></tr><tr><td><code>ByteArrayContainer</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr><tr><td><code>ByteBufContainer</code></td><td><code>@ResponseField(dataType = STRING)</code></td><td><strong>2.1.1</strong> 开始支持</td></tr></tbody></table>',31),n=[a];function c(s,i){return d(),e("div",null,n)}const p=t(r,[["render",c],["__file","data-type-mapping.html.vue"]]),y=JSON.parse('{"path":"/v2/jt-808/guide/annotation-based-dev/data-type-mapping.html","title":"数据类型转换(传统方式)","lang":"zh-CN","frontmatter":{"icon":"map","description":"数据类型转换(传统方式) BYTE 反序列化BYTE 序列化BYTE BYTES 反序列化BYTES 序列化BYTES WORD 反序列化WORD 序列化WORD DWORD 反序列化DWORD 序列化DWORD BCD 反序列化BCD 序列号BCD STRING 反序列化STRING 序列化STRING","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v2/jt-808/guide/annotation-based-dev/data-type-mapping.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"数据类型转换(传统方式)"}],["meta",{"property":"og:description","content":"数据类型转换(传统方式) BYTE 反序列化BYTE 序列化BYTE BYTES 反序列化BYTES 序列化BYTES WORD 反序列化WORD 序列化WORD DWORD 反序列化DWORD 序列化DWORD BCD 反序列化BCD 序列号BCD STRING 反序列化STRING 序列化STRING"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-06T15:49:53.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2023-05-06T15:49:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型转换(传统方式)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-06T15:49:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"BYTE","slug":"byte","link":"#byte","children":[{"level":3,"title":"反序列化BYTE","slug":"反序列化byte","link":"#反序列化byte","children":[]},{"level":3,"title":"序列化BYTE","slug":"序列化byte","link":"#序列化byte","children":[]}]},{"level":2,"title":"BYTES","slug":"bytes","link":"#bytes","children":[{"level":3,"title":"反序列化BYTES","slug":"反序列化bytes","link":"#反序列化bytes","children":[]},{"level":3,"title":"序列化BYTES","slug":"序列化bytes","link":"#序列化bytes","children":[]}]},{"level":2,"title":"WORD","slug":"word","link":"#word","children":[{"level":3,"title":"反序列化WORD","slug":"反序列化word","link":"#反序列化word","children":[]},{"level":3,"title":"序列化WORD","slug":"序列化word","link":"#序列化word","children":[]}]},{"level":2,"title":"DWORD","slug":"dword","link":"#dword","children":[{"level":3,"title":"反序列化DWORD","slug":"反序列化dword","link":"#反序列化dword","children":[]},{"level":3,"title":"序列化DWORD","slug":"序列化dword","link":"#序列化dword","children":[]}]},{"level":2,"title":"BCD","slug":"bcd","link":"#bcd","children":[{"level":3,"title":"反序列化BCD","slug":"反序列化bcd","link":"#反序列化bcd","children":[]},{"level":3,"title":"序列号BCD","slug":"序列号bcd","link":"#序列号bcd","children":[]}]},{"level":2,"title":"STRING","slug":"string","link":"#string","children":[{"level":3,"title":"反序列化STRING","slug":"反序列化string","link":"#反序列化string","children":[]},{"level":3,"title":"序列化STRING","slug":"序列化string","link":"#序列化string","children":[]}]}],"git":{"createdTime":1682759820000,"updatedTime":1683388193000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":2}]},"readingTime":{"minutes":2.01,"words":604},"filePathRelative":"v2/jt-808/guide/annotation-based-dev/data-type-mapping.md","localizedDate":"2023年4月29日","autoDesc":true,"excerpt":"\\n<h2>BYTE</h2>\\n<h3>反序列化BYTE</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>目标类型</th>\\n<th>注解</th>\\n<th>备注</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>byte, Byte</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td>有溢出的风险</td>\\n</tr>\\n<tr>\\n<td><code>short, Short</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>int, Integer</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>long, Long</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><code>ByteArrayContainer</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td><strong>2.1.1</strong> 开始支持</td>\\n</tr>\\n<tr>\\n<td><code>ByteBufContainer</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td><strong>2.1.1</strong> 开始支持</td>\\n</tr>\\n<tr>\\n<td><code>BitOperator</code></td>\\n<td><code>@RequestField(dataType = BYTE)</code></td>\\n<td><strong>2.1.1</strong> 开始支持</td>\\n</tr>\\n</tbody>\\n</table>"}');export{p as comp,y as data};
