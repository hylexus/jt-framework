import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-BEQS3wW-.js";const e={},p=t(`<h1 id="netty相关" tabindex="-1"><a class="header-anchor" href="#netty相关"><span>Netty相关</span></a></h1><p>要自定义 <code>Netty</code> 相关配置，只需声明一个 <code>Jt808ServerNettyConfigure</code> 类型的 <code>Bean</code> 即可。</p><h2 id="_2-3-0-rc-5以及之后版本" tabindex="-1"><a class="header-anchor" href="#_2-3-0-rc-5以及之后版本"><span>2.3.0-rc.5以及之后版本</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt808ServerNettyConfigure</span> <span class="token keyword">extends</span> <span class="token class-name">JtServerNettyConfigure</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">configProvider</span> 可以从中读取配置项(环境变量、系统属性、application.yaml、...)
     * <span class="token keyword">@return</span> 返回入参中的 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">serverBootstrap</span></span><span class="token punctuation">}</span> 或 返回一个新的 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ServerBootstrap</span></span> ServerBootstrap<span class="token punctuation">}</span> 实例
     */</span>
    <span class="token class-name">ServerBootstrap</span> <span class="token function">configureServerBootstrap</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationProvider</span> configProvider<span class="token punctuation">,</span> <span class="token class-name">ServerBootstrap</span> serverBootstrap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">configureSocketChannel</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationProvider</span> configProvider<span class="token punctuation">,</span> <span class="token class-name">SocketChannel</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>推荐继承默认实现类来自定义组件:</p><ul><li><code>BuiltinJt808ServerNettyConfigure</code></li><li><code>BuiltinJt808AttachmentServerNettyConfigure</code></li></ul><p>当然可以直接实现 <code>Jt808ServerNettyConfigure</code> 接口，下面是一个示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJt808ServerNettyConfigure</span> <span class="token keyword">implements</span> <span class="token class-name">Jt808ServerNettyConfigure</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">MyJt808ServerNettyConfigure</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Jt808ServerProps</span> serverProps<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyJt808ServerNettyConfigure</span><span class="token punctuation">(</span>
            <span class="token class-name">Jt808ServerProps</span> serverProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>serverProps <span class="token operator">=</span> serverProps<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ServerBootstrap</span> <span class="token function">configureServerBootstrap</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationProvider</span> configProvider<span class="token punctuation">,</span> <span class="token class-name">ServerBootstrap</span> serverBootstrap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Jt808NettyTcpServerProps</span> nettyProps <span class="token operator">=</span> serverProps<span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> preferEpoll <span class="token operator">=</span> nettyProps<span class="token punctuation">.</span><span class="token function">isPreferEpoll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">ServerChannel</span><span class="token punctuation">&gt;</span></span> channelClass<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>preferEpoll <span class="token operator">&amp;&amp;</span> <span class="token class-name">Epoll</span><span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            channelClass <span class="token operator">=</span> <span class="token class-name">EpollServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
            serverBootstrap<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EpollEventLoopGroup</span><span class="token punctuation">(</span>nettyProps<span class="token punctuation">.</span><span class="token function">getBossThreadCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">EpollEventLoopGroup</span><span class="token punctuation">(</span>nettyProps<span class="token punctuation">.</span><span class="token function">getWorkerThreadCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span>channelClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            channelClass <span class="token operator">=</span> <span class="token class-name">NioServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
            serverBootstrap<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>nettyProps<span class="token punctuation">.</span><span class="token function">getBossThreadCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NioEventLoopGroup</span><span class="token punctuation">(</span>nettyProps<span class="token punctuation">.</span><span class="token function">getWorkerThreadCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span>channelClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Epoll.isAvailable(): {}, jt808.server.prefer-epoll: {}, channelClass: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Epoll</span><span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> preferEpoll<span class="token punctuation">,</span> channelClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> serverBootstrap
                <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token class-name">ChannelOption</span><span class="token punctuation">.</span><span class="token constant">SO_BACKLOG</span><span class="token punctuation">,</span> <span class="token number">2048</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token class-name">ChannelOption</span><span class="token punctuation">.</span><span class="token constant">SO_REUSEADDR</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">childOption</span><span class="token punctuation">(</span><span class="token class-name">ChannelOption</span><span class="token punctuation">.</span><span class="token constant">SO_KEEPALIVE</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureSocketChannel</span><span class="token punctuation">(</span><span class="token class-name">ConfigurationProvider</span> configProvider<span class="token punctuation">,</span> <span class="token class-name">SocketChannel</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ch<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> someHandler1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ch<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> someHandler2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ch<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> someHandler3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//...</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-0-rc-5之前版本" tabindex="-1"><a class="header-anchor" href="#_2-3-0-rc-5之前版本"><span>2.3.0-rc.5之前版本</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt808ServerNettyConfigure</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">configureServerBootstrap</span><span class="token punctuation">(</span><span class="token class-name">ServerBootstrap</span> serverBootstrap<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">configureSocketChannel</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","netty-config.html.vue"]]),d=JSON.parse('{"path":"/v2/jt-808/guide/customization/netty-config.html","title":"Netty相关","lang":"zh-CN","frontmatter":{"icon":"leaf","description":"Netty相关 要自定义 Netty 相关配置，只需声明一个 Jt808ServerNettyConfigure 类型的 Bean 即可。 2.3.0-rc.5以及之后版本 示例 推荐继承默认实现类来自定义组件: BuiltinJt808ServerNettyConfigure BuiltinJt808AttachmentServerNettyConf...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v2/jt-808/guide/customization/netty-config.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"Netty相关"}],["meta",{"property":"og:description","content":"Netty相关 要自定义 Netty 相关配置，只需声明一个 Jt808ServerNettyConfigure 类型的 Bean 即可。 2.3.0-rc.5以及之后版本 示例 推荐继承默认实现类来自定义组件: BuiltinJt808ServerNettyConfigure BuiltinJt808AttachmentServerNettyConf..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-16T12:29:51.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2025-04-16T12:29:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-16T12:29:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"2.3.0-rc.5以及之后版本","slug":"_2-3-0-rc-5以及之后版本","link":"#_2-3-0-rc-5以及之后版本","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"2.3.0-rc.5之前版本","slug":"_2-3-0-rc-5之前版本","link":"#_2-3-0-rc-5之前版本","children":[]}],"git":{"createdTime":1671812085000,"updatedTime":1744806591000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":2}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"v2/jt-808/guide/customization/netty-config.md","localizedDate":"2022年12月24日","autoDesc":true,"excerpt":"\\n<p>要自定义 <code>Netty</code> 相关配置，只需声明一个 <code>Jt808ServerNettyConfigure</code> 类型的 <code>Bean</code> 即可。</p>\\n<h2>2.3.0-rc.5以及之后版本</h2>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">Jt808ServerNettyConfigure</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">JtServerNettyConfigure</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">configProvider</span> 可以从中读取配置项(环境变量、系统属性、application.yaml、...)\\n     * <span class=\\"token keyword\\">@return</span> 返回入参中的 <span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">@code</span> <span class=\\"token code-section\\"><span class=\\"token code language-java\\">serverBootstrap</span></span><span class=\\"token punctuation\\">}</span> 或 返回一个新的 <span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">@link</span> <span class=\\"token reference\\"><span class=\\"token class-name\\">ServerBootstrap</span></span> ServerBootstrap<span class=\\"token punctuation\\">}</span> 实例\\n     */</span>\\n    <span class=\\"token class-name\\">ServerBootstrap</span> <span class=\\"token function\\">configureServerBootstrap</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ConfigurationProvider</span> configProvider<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ServerBootstrap</span> serverBootstrap<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">configureSocketChannel</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ConfigurationProvider</span> configProvider<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">SocketChannel</span> ch<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}');export{k as comp,d as data};
