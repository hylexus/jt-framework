import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as c,c as l,b as n,d as s,e as t,w as i,a as u}from"./app-BEQS3wW-.js";const k={},r=n("h1",{id:"苏标扩展-v2-1-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#苏标扩展-v2-1-4"},[n("span",null,"苏标扩展(v2.1.4)")])],-1),d={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"提示",-1),v=n("h2",{id:"配置项",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#配置项"},[n("span",null,"配置项")])],-1),b=u(`<h2 id="附件服务器" tabindex="-1"><a class="header-anchor" href="#附件服务器"><span>附件服务器</span></a></h2><p>下面是对几个特殊扩展消息 <code>0x1210</code>、<code>0x1211</code>、<code>0x1212</code>、<code>0x30316364</code> 的示例性处理流程：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Jt808RequestHandler</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AttachmentFileHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AttachmentFileService</span> attachmentFileService<span class="token punctuation">;</span>
    <span class="token comment">// &lt;terminalId, &lt;fileName, AttachmentItem&gt;&gt;</span>
    <span class="token comment">// 只是个示例而已 看你需求自己改造</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Cache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1210Alias<span class="token punctuation">.</span>AttachmentItem</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> attachmentItemCache <span class="token operator">=</span> <span class="token class-name">Caffeine</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expireAfterWrite</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMinutes</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AttachmentFileHandler</span><span class="token punctuation">(</span><span class="token class-name">AttachmentFileService</span> attachmentFileService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>attachmentFileService <span class="token operator">=</span> attachmentFileService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Jt808RequestHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x1210</span><span class="token punctuation">,</span> versions <span class="token operator">=</span> <span class="token class-name">Jt808ProtocolVersion</span><span class="token punctuation">.</span><span class="token constant">AUTO_DETECTION</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">BuiltinServerCommonReplyMsg</span> <span class="token function">processMsg0x1210</span><span class="token punctuation">(</span><span class="token class-name">Jt808Request</span> request<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1210Alias</span> body<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;0x1210 ==&gt; {} {}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">getAttachmentItemList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">warnLogIfNecessary</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;0x1210 不应该由指令服务器对应的端口处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1210Alias<span class="token punctuation">.</span>AttachmentItem</span><span class="token punctuation">&gt;</span></span> itemMap <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>attachmentItemCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">BuiltinMsg1210Alias<span class="token punctuation">.</span>AttachmentItem</span> item <span class="token operator">:</span> body<span class="token punctuation">.</span><span class="token function">getAttachmentItemList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">setGroup</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">BuiltinServerCommonReplyMsg</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">flowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Jt808RequestHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x1211</span><span class="token punctuation">,</span> versions <span class="token operator">=</span> <span class="token class-name">Jt808ProtocolVersion</span><span class="token punctuation">.</span><span class="token constant">AUTO_DETECTION</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">BuiltinServerCommonReplyMsg</span> <span class="token function">processMsg0x1211</span><span class="token punctuation">(</span><span class="token class-name">Jt808Request</span> request<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1211Alias</span> body<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;0x1211 ==&gt; {}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">warnLogIfNecessary</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;0x1211 不应该由指令服务器对应的端口处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">BuiltinServerCommonReplyMsg</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">msgId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">flowId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Jt808RequestHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x1212</span><span class="token punctuation">,</span> versions <span class="token operator">=</span> <span class="token class-name">Jt808ProtocolVersion</span><span class="token punctuation">.</span><span class="token constant">AUTO_DETECTION</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">BuiltinMsg9212Alias</span> <span class="token function">processMsg0x1212</span><span class="token punctuation">(</span><span class="token class-name">Jt808Request</span> request<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1212Alias</span> reqBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;0x1211 ==&gt; {}&quot;</span><span class="token punctuation">,</span> reqBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">warnLogIfNecessary</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&quot;0x1212 不应该由指令服务器对应的端口处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">BuiltinMsg9212Alias</span> resp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BuiltinMsg9212Alias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setFileNameLength</span><span class="token punctuation">(</span>reqBody<span class="token punctuation">.</span><span class="token function">getFileNameLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span>reqBody<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setFileType</span><span class="token punctuation">(</span>reqBody<span class="token punctuation">.</span><span class="token function">getFileType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 0x00：完成</span>
        <span class="token comment">// 0x01：需要补传</span>
        resp<span class="token punctuation">.</span><span class="token function">setUploadResult</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setPackageCountToReTransmit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        resp<span class="token punctuation">.</span><span class="token function">setRetransmitItemList</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> resp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 这里对应的是苏标附件上传的码流: 0x31326364(并不是 1078 协议中的码流)
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 在 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">SimpleAttachmentJt808RequestProcessor</span><span class="token punctuation">#</span><span class="token function">simulateJt808Request</span><span class="token punctuation">(</span><span class="token class-name">ByteBuf</span><span class="token punctuation">,</span> <span class="token class-name">Jt808Session</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> 中将苏标码流上传的报文模拟成了普通的 808 报文
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">SimpleAttachmentJt808RequestProcessor</span><span class="token punctuation">#</span><span class="token function">simulateJt808Request</span><span class="token punctuation">(</span><span class="token class-name">ByteBuf</span><span class="token punctuation">,</span> <span class="token class-name">Jt808Session</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token comment">// 这里是对应的文件上传的码流</span>
    <span class="token annotation punctuation">@Jt808RequestHandlerMapping</span><span class="token punctuation">(</span>msgType <span class="token operator">=</span> <span class="token number">0x30316364</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processMsg30316364</span><span class="token punctuation">(</span><span class="token class-name">Jt808Request</span> request<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg30316364Alias</span> body<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt808Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 这里的示例都是随便瞎写的 存储到本地磁盘了</span>
        <span class="token comment">// 实际场景中看你自己需求  比如存储到 OSS、AWS、Minio……</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> session <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;session == null, 附件上传之前没有没有发送 0x1210,0x1211 消息???&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;0x30316364 ==&gt; {} -- {} -- {}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">getDataOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> body<span class="token punctuation">.</span><span class="token function">getDataLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 这个 if 就是用来调试的 没啥其他作用  删掉就行</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;代码不应该执行到这个分支&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>attachmentItemCache<span class="token punctuation">.</span><span class="token function">getIfPresent</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1210Alias<span class="token punctuation">.</span>AttachmentItem</span><span class="token punctuation">&gt;</span></span> itemMap<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">BuiltinMsg1210Alias<span class="token punctuation">.</span>AttachmentItem</span> item <span class="token operator">=</span> itemMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;收到未知附件上传消息: {}&quot;</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>attachmentFileService<span class="token punctuation">.</span><span class="token function">writeDataFragment</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> body<span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">warnLogIfNecessary</span><span class="token punctuation">(</span><span class="token class-name">Jt808Request</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">role</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Jt808Session<span class="token punctuation">.</span>Role</span><span class="token punctuation">.</span><span class="token constant">INSTRUCTION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是示例性的文件处理流程：</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里只是示例性的将文件存储到了本地磁盘中。</p><p>实际使用时你应该将文件存储到其他存储介质，比如 OSS、AWS、Minio 等。</p></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AttachmentFileService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt808AppProps</span> appProps<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AttachmentFileService</span><span class="token punctuation">(</span><span class="token class-name">Jt808AppProps</span> appProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>appProps <span class="token operator">=</span> appProps<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeDataFragment</span><span class="token punctuation">(</span><span class="token class-name">Jt808Session</span> session<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg30316364Alias</span> body<span class="token punctuation">,</span> <span class="token class-name">BuiltinMsg1210Alias</span> group<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">AlarmIdentifierAlias</span> alarmIdentifier <span class="token operator">=</span> group<span class="token punctuation">.</span><span class="token function">getAlarmIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> alarmIdentifier<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里就瞎写了一个路径  看你需求随便改</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> filePath <span class="token operator">=</span> appProps<span class="token punctuation">.</span><span class="token function">getAttachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTemporaryPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator
                <span class="token operator">+</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>localDateTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator
                <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">terminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator
                <span class="token operator">+</span> group<span class="token punctuation">.</span><span class="token function">getMessageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator
                <span class="token comment">// + group.getAlarmNo() + File.separator</span>
                <span class="token operator">+</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyyMMddHHmmss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>localDateTime<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> group<span class="token punctuation">.</span><span class="token function">getAlarmNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator
                <span class="token operator">+</span> body<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">File</span> tempFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tempFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>tempFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tempFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;新建文件失败:&quot;</span> <span class="token operator">+</span> tempFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">RandomAccessFile</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&quot;rws&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            file<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">getDataOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            file<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>body<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> body<span class="token punctuation">.</span><span class="token function">getDataLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function f(g,y){const p=a("Badge"),e=a("RouteLink");return c(),l("div",null,[r,n("div",d,[m,n("p",null,[s("苏标扩展协议是 "),t(p,{text:"2.1.4",type:"tip",vertical:"middle"}),s(" 中开始支持的。")])]),v,n("p",null,[s("参考 "),t(e,{to:"/v2/jt-808/config/extension-jiangsu.html"},{default:i(()=>[s("配置-苏标扩展")]),_:1}),s(" 。")]),b])}const x=o(k,[["render",f],["__file","index.html.vue"]]),q=JSON.parse('{"path":"/v2/jt-808/guide/protocol-extension/jangsu/","title":"苏标扩展(v2.1.4)","lang":"zh-CN","frontmatter":{"icon":"proposal","description":"苏标扩展(v2.1.4) 提示 苏标扩展协议是 配置项 参考 。 附件服务器 下面是对几个特殊扩展消息 0x1210、0x1211、0x1212、0x30316364 的示例性处理流程： 下面是示例性的文件处理流程： 提示 这里只是示例性的将文件存储到了本地磁盘中。 实际使用时你应该将文件存储到其他存储介质，比如 OSS、AWS、Minio 等。","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v2/jt-808/guide/protocol-extension/jangsu/"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"苏标扩展(v2.1.4)"}],["meta",{"property":"og:description","content":"苏标扩展(v2.1.4) 提示 苏标扩展协议是 配置项 参考 。 附件服务器 下面是对几个特殊扩展消息 0x1210、0x1211、0x1212、0x30316364 的示例性处理流程： 下面是示例性的文件处理流程： 提示 这里只是示例性的将文件存储到了本地磁盘中。 实际使用时你应该将文件存储到其他存储介质，比如 OSS、AWS、Minio 等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T14:59:57.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2024-03-26T14:59:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"苏标扩展(v2.1.4)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-26T14:59:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"配置项","slug":"配置项","link":"#配置项","children":[]},{"level":2,"title":"附件服务器","slug":"附件服务器","link":"#附件服务器","children":[]}],"git":{"createdTime":1711465197000,"updatedTime":1711465197000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":2.39,"words":718},"filePathRelative":"v2/jt-808/guide/protocol-extension/jangsu/index.md","localizedDate":"2024年3月26日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>苏标扩展协议是 </p>\\n</div>\\n<h2>配置项</h2>\\n<p>参考 <a href=\\"/jt-framework/v2/jt-808/config/extension-jiangsu.html\\" target=\\"_blank\\">配置-苏标扩展</a> 。</p>\\n<h2>附件服务器</h2>\\n<p>下面是对几个特殊扩展消息 <code>0x1210</code>、<code>0x1211</code>、<code>0x1212</code>、<code>0x30316364</code> 的示例性处理流程：</p>"}');export{x as comp,q as data};
