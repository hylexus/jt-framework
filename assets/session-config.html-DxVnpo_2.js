import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as p,b as n,d as s,e,a as c}from"./app-BEQS3wW-.js";const l={},r=n("h1",{id:"session相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#session相关"},[n("span",null,"Session相关")])],-1),u={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"传送门",-1),m={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="jt808sessionmanager" tabindex="-1"><a class="header-anchor" href="#jt808sessionmanager"><span>Jt808SessionManager</span></a></h2><p>该组件用来管理每个终端的 <code>TCP</code> 连接。</p><p>要定制 <code>Jt808SessionManager</code> 只需自己声明一个 <code>Jt808SessionManager</code> 类型的Bean即可。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySessionManager</span> <span class="token keyword">implements</span> <span class="token class-name">Jt808SessionManager</span> <span class="token punctuation">{</span>
    <span class="token comment">// ......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizedDemoJt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808SessionManager</span> <span class="token function">supplyJt808SessionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">MySessionManager</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jt808sessionmanagereventlistener" tabindex="-1"><a class="header-anchor" href="#jt808sessionmanagereventlistener"><span>Jt808SessionManagerEventListener</span></a></h2><p>该组件可以监听 <code>Jt808Session</code> 的 <code>添加</code>、<code>移除</code>、<code>关闭</code> 事件。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJt808SessionManagerEventListener</span> <span class="token keyword">implements</span> <span class="token class-name">Jt808SessionManagerEventListener</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSessionAdd</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt808Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[SessionAdd] terminalId = {}, sessionId = {}&quot;</span><span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getTerminalId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizedDemoJt808Config</span> <span class="token keyword">extends</span> <span class="token class-name">Jt808ServerConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Jt808SessionManagerEventListener</span> <span class="token function">supplyJt808SessionManagerEventListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MyJt808SessionManagerEventListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),v={class:"hint-container tip"},g=n("p",{class:"hint-container-title"},"传送门",-1),h={href:"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized",target:"_blank",rel:"noopener noreferrer"};function b(y,f){const a=o("ExternalLinkIcon");return i(),p("div",null,[r,n("div",u,[d,n("p",null,[s("本小节示例可以在 "),n("a",m,[s("samples/jt-808-server-sample-customized"),e(a)]),s(" 找到相关代码。")])]),k,n("div",v,[g,n("p",null,[s("本小节示例可以在 "),n("a",h,[s("samples/jt-808-server-sample-customized"),e(a)]),s(" 找到相关代码。")])])])}const _=t(l,[["render",b],["__file","session-config.html.vue"]]),w=JSON.parse('{"path":"/v1/jt-808/guide/customization/session-config.html","title":"Session相关","lang":"zh-CN","frontmatter":{"description":"Session相关 传送门 本小节示例可以在 samples/jt-808-server-sample-customized 找到相关代码。 Jt808SessionManager 该组件用来管理每个终端的 TCP 连接。 要定制 Jt808SessionManager 只需自己声明一个 Jt808SessionManager 类型的Bean即可。 J...","head":[["meta",{"property":"og:url","content":"https://github.com/hylexus/jt-framework/jt-framework/v1/jt-808/guide/customization/session-config.html"}],["meta",{"property":"og:site_name","content":"jt-framework"}],["meta",{"property":"og:title","content":"Session相关"}],["meta",{"property":"og:description","content":"Session相关 传送门 本小节示例可以在 samples/jt-808-server-sample-customized 找到相关代码。 Jt808SessionManager 该组件用来管理每个终端的 TCP 连接。 要定制 Jt808SessionManager 只需自己声明一个 Jt808SessionManager 类型的Bean即可。 J..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-23T16:14:45.000Z"}],["meta",{"property":"article:author","content":"hylexus"}],["meta",{"property":"article:modified_time","content":"2022-12-23T16:14:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Session相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-23T16:14:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hylexus\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"]]},"headers":[{"level":2,"title":"Jt808SessionManager","slug":"jt808sessionmanager","link":"#jt808sessionmanager","children":[]},{"level":2,"title":"Jt808SessionManagerEventListener","slug":"jt808sessionmanagereventlistener","link":"#jt808sessionmanagereventlistener","children":[]}],"git":{"createdTime":1671812085000,"updatedTime":1671812085000,"contributors":[{"name":"hylexus","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":0.58,"words":175},"filePathRelative":"v1/jt-808/guide/customization/session-config.md","localizedDate":"2022年12月24日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">传送门</p>\\n<p>本小节示例可以在 <a href=\\"https://github.com/hylexus/jt-framework/tree/master/samples/jt-808-server-sample-customized\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">samples/jt-808-server-sample-customized</a> 找到相关代码。</p>\\n</div>\\n<h2>Jt808SessionManager</h2>"}');export{_ as comp,w as data};
