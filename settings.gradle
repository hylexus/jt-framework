pluginManagement {
    repositories {
        mavenLocal()
        [
                'https://maven.aliyun.com/repository/central',
                'https://maven.aliyun.com/repository/public',
                'https://maven.aliyun.com/repository/google',
                'https://maven.aliyun.com/repository/spring',
                'https://maven.aliyun.com/repository/spring-plugin',
                'https://maven.aliyun.com/repository/gradle-plugin',
                'https://maven.aliyun.com/repository/grails-core',
                'https://maven.aliyun.com/repository/apache-snapshots',
                "https://plugins.gradle.org/m2/",
                "https://repo.spring.io/release",
                "https://repo.spring.io/snapshot",
        ].each { repoUrl ->
            maven { url repoUrl }
        }
        gradlePluginPortal()
        mavenCentral()
    }
//    resolutionStrategy {
//        eachPlugin {
//            if (requested.id.id == "org.jetbrains.kotlin.jvm") {
//                useVersion "${kotlinVersion}"
//            }
//            if (requested.id.id == "org.jetbrains.kotlin.plugin.spring") {
//                useVersion "${kotlinVersion}"
//            }
//        }
//    }
}

// modules
include 'jt-core'
include 'jt-808-server-support'
include 'jt-808-server-spring-boot-autoconfigure'
include 'jt-808-server-spring-boot-starter-boot2'
include 'jt-808-server-spring-boot-starter'
include 'jt-1078-server-support'
include 'jt-1078-server-spring-boot-autoconfigure'
include 'jt-1078-server-spring-boot-starter-boot2'
include 'jt-1078-server-spring-boot-starter'
include 'dashboard'
include 'dashboard:jt-dashboard-common'
include 'dashboard:jt-dashboard-server'
include 'dashboard:jt-dashboard-server-spring-boot-starter'
include 'dashboard:jt-dashboard-client'
include 'dashboard:jt-dashboard-client-spring-boot-starter'

// samples
include 'samples'
include 'samples:jt-sample-common'
include 'samples:jt-808-server-sample-debug'
include 'samples:jt-808-server-sample-bare'
include 'samples:jt-808-server-sample-bare-boot3'
include 'samples:jt-808-server-sample-customized'
include 'samples:jt-808-server-sample-annotation'
include 'samples:jt-808-client-sample-debug'
include 'samples:jt-1078-server-sample-webflux-boot3'
include 'samples:jt-1078-server-sample-webmvc-boot3'

// demos
include 'demos'
include 'demos:jt-demo-808-server-webflux-boot3'
include 'demos:jt-demo-808-server-webmvc-boot3'
include 'demos:jt-demo-1078-server-webflux-boot3'
include 'demos:jt-demo-1078-server-webmvc-boot3'
include 'demos:jt-demo-dashboard-webflux-boot3'
include 'demos:jt-demo-dashboard-webmvc-boot3'

rootProject.name = "jt-framework"
// Change default "build.gradle" file to "${project.name}.gradle" recursively
setBuildFileName(rootProject)

def setBuildFileName(project) {
    project.children.each { childProject ->
        childProject.buildFileName = "${childProject.name}.gradle"
        assert childProject.projectDir.isDirectory()
        assert childProject.buildFile.isFile()
        setBuildFileName(childProject)
    }
}
